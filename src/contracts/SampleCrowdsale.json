{
  "contractName": "SampleCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "refundee",
          "type": "address"
        }
      ],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "beneficiaryWithdrawBeforeClosing",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        },
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "cap",
          "type": "uint256"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "goal",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CrowdsaleFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b146100fc5780632c4e722e1461012b578063355274ea1461015657806340193883146101815780634042b66f146101ac57806347535d7b146101d75780634b6753bc146102065780634bb278f3146102315780634f93594514610248578063521eb273146102775780637d3d6522146102ce578063b3f05b97146102fd578063b7a8807c1461032c578063bffa55d514610357578063d2c7200b1461039a578063ec8ac4d8146103b1578063fc0c546a146103e7575b6100fa3361043e565b005b34801561010857600080fd5b50610111610534565b604051808215151515815260200191505060405180910390f35b34801561013757600080fd5b50610140610540565b6040518082815260200191505060405180910390f35b34801561016257600080fd5b5061016b61054a565b6040518082815260200191505060405180910390f35b34801561018d57600080fd5b50610196610554565b6040518082815260200191505060405180910390f35b3480156101b857600080fd5b506101c161055e565b6040518082815260200191505060405180910390f35b3480156101e357600080fd5b506101ec610568565b604051808215151515815260200191505060405180910390f35b34801561021257600080fd5b5061021b610583565b6040518082815260200191505060405180910390f35b34801561023d57600080fd5b5061024661058d565b005b34801561025457600080fd5b5061025d61060d565b604051808215151515815260200191505060405180910390f35b34801561028357600080fd5b5061028c610621565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102da57600080fd5b506102e361064b565b604051808215151515815260200191505060405180910390f35b34801561030957600080fd5b5061031261065f565b604051808215151515815260200191505060405180910390f35b34801561033857600080fd5b50610341610676565b6040518082815260200191505060405180910390f35b34801561036357600080fd5b50610398600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610680565b005b3480156103a657600080fd5b506103af61077f565b005b6103e5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061043e565b005b3480156103f357600080fd5b506103fc610832565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000806000600160008082825401925050819055506000549050349250610465848461085c565b61046e8361087d565b91506104858360045461089b90919063ffffffff16565b60048190555061049584836108bc565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8585604051808381526020018281526020019250505060405180910390a361050c84846108ca565b6105146108ce565b61051e84846109a6565b6000548114151561052e57600080fd5b50505050565b60006007544211905090565b6000600354905090565b6000600554905090565b6000600954905090565b6000600454905090565b6000600654421015801561057e57506007544211155b905090565b6000600754905090565b600860009054906101000a900460ff161515156105a957600080fd5b6105b1610534565b15156105bc57600080fd5b6001600860006101000a81548160ff0219169083151502179055506105df6109aa565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1565b600060055461061a61055e565b1015905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060095461065861055e565b1015905090565b6000600860009054906101000a900460ff16905090565b6000600654905090565b61068861065f565b151561069357600080fd5b61069b61064b565b1515156106a757600080fd5b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561076457600080fd5b505af1158015610778573d6000803e3d6000fd5b5050505050565b61078761064b565b151561079257600080fd5b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d2c7200b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561081857600080fd5b505af115801561082c573d6000803e3d6000fd5b50505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610864610568565b151561086f57600080fd5b6108798282610ba1565b5050565b600061089460035483610bd990919063ffffffff16565b9050919050565b60008082840190508381101515156108b257600080fd5b8091505092915050565b6108c68282610c17565b5050565b5050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b15801561098b57600080fd5b505af115801561099f573d6000803e3d6000fd5b5050505050565b5050565b6109b261064b565b15610af857600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610a3d57600080fd5b505af1158015610a51573d6000803e3d6000fd5b50505050600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610adb57600080fd5b505af1158015610aef573d6000803e3d6000fd5b50505050610b97565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610b7e57600080fd5b505af1158015610b92573d6000803e3d6000fd5b505050505b610b9f610d0b565b565b610bab8282610d0d565b600554610bc882610bba61055e565b61089b90919063ffffffff16565b11151515610bd557600080fd5b5050565b6000806000841415610bee5760009150610c10565b8284029050828482811515610bff57fe5b04141515610c0c57600080fd5b8091505b5092915050565b610c1f610832565b73ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610cc157600080fd5b505af1158015610cd5573d6000803e3d6000fd5b505050506040513d6020811015610ceb57600080fd5b81019080805190602001909291905050501515610d0757600080fd5b5050565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610d4957600080fd5b60008114151515610d5957600080fd5b50505600a165627a7a72305820323615298387a08faf1217c0ca2e578fa3cd45ffa44c61b51b85281c95452ba30029",
  "sourceMap": "1433:661:33:-;;;1522:569;8:9:-1;5:2;;;30:1;27;20:12;5:2;1522:569:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1890:4;1835:11;1848;1806:3;1760:4;1766:6;1774:5;592:1:128;576:13;:17;;;;2365:1:13;2358:4;:8;2350:17;;;;;;;;2403:1;2385:20;;:6;:20;;;;2377:29;;;;;;;;2441:1;2424:19;;:5;:19;;;;2416:28;;;;;;;;2463:4;2455:5;:12;;;;2487:6;2477:7;;:16;;;;;;;;;;;;;;;;;;2512:5;2503:6;;:14;;;;;;;;;;;;;;;;;;2276:248;;;508:1:21;502:3;:7;494:16;;;;;;;;528:3;521:4;:10;;;;450:89;815:15:24;800:11;:30;;792:39;;;;;;;;863:11;849;:25;841:34;;;;;;;;901:11;886:12;:26;;;;937:11;922:12;:26;;;;658:297;;455:5:14;442:10;;:18;;;;;;;;;;;;;;;;;;1244:1:16;1237:4;:8;1229:17;;;;;;;;1284:8;:6;;;:8;;;:::i;:::-;1267:26;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1267:26:16;1257:7;;:36;;;;;;;;;;;;;;;;;;1312:4;1304:5;:12;;;;1184:140;2079:3:33;2071:4;:11;;2063:20;;;;;;;;1522:569;;;;;;;1433:661;;3225:79:13;3264:7;3290;;;;;;;;;;;3283:14;;3225:79;:::o;1433:661:33:-;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1433:661:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2986:21:13;2996:10;2986:9;:21::i;:::-;1433:661:33;1709:164:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1709:164:24;;;;;;;;;;;;;;;;;;;;;;;;;;;3389:75:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3389:75:13;;;;;;;;;;;;;;;;;;;;;;;607::21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;607:75:21;;;;;;;;;;;;;;;;;;;;;;;1411:77:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1411:77:16;;;;;;;;;;;;;;;;;;;;;;;3527:85:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3527:85:13;;;;;;;;;;;;;;;;;;;;;;;1348:197:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1348:197:24;;;;;;;;;;;;;;;;;;;;;;;;;;;1174:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1174:89:24;;;;;;;;;;;;;;;;;;;;;;;797:183:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;797:183:14;;;;;;806:94:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;806:94:21;;;;;;;;;;;;;;;;;;;;;;;;;;;3225:79:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3225:79:13;;;;;;;;;;;;;;;;;;;;;;;;;;;1930:96:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1930:96:16;;;;;;;;;;;;;;;;;;;;;;;;;;;557:82:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;557:82:14;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:89:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1020:89:24;;;;;;;;;;;;;;;;;;;;;;;1643:158:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1643:158:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:147;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2153:147:16;;;;;;3869:603:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3073:76:13;;;;;;;;;;;;;;;;;;;;;;;;;;;3869:603;3947:17;4089:14;1049:20:128;1037:1;1020:13;;:18;;;;;;;;;;;1072:13;;1049:36;;3967:9:13;3947:29;;3986:44;4007:11;4020:9;3986:20;:44::i;:::-;4106:26;4122:9;4106:15;:26::i;:::-;4089:43;;4180:25;4195:9;4180:10;;:14;;:25;;;;:::i;:::-;4167:10;:38;;;;4216:37;4233:11;4246:6;4216:16;:37::i;:::-;4296:11;4268:59;;4284:10;4268:59;;;4309:9;4320:6;4268:59;;;;;;;;;;;;;;;;;;;;;;;;4338:46;4361:11;4374:9;4338:22;:46::i;:::-;4395:15;:13;:15::i;:::-;4420:45;4442:11;4455:9;4420:21;:45::i;:::-;1132:13:128;;1116:12;:29;1108:38;;;;;;;;3869:603:13;;;;:::o;1709:164:24:-;1751:4;1854:12;;1836:15;:30;1829:37;;1709:164;:::o;3389:75:13:-;3426:7;3452:5;;3445:12;;3389:75;:::o;607::21:-;643:7;670:4;;663:11;;607:75;:::o;1411:77:16:-;1448:7;1475:5;;1468:12;;1411:77;:::o;3527:85:13:-;3569:7;3595:10;;3588:17;;3527:85;:::o;1348:197:24:-;1387:4;1491:12;;1472:15;:31;;:66;;;;;1526:12;;1507:15;:31;;1472:66;1465:73;;1348:197;:::o;1174:89::-;1218:7;1244:12;;1237:19;;1174:89;:::o;797:183:14:-;843:10;;;;;;;;;;;842:11;834:20;;;;;;;;872:11;:9;:11::i;:::-;864:20;;;;;;;;908:4;895:10;;:17;;;;;;;;;;;;;;;;;;923:15;:13;:15::i;:::-;953:20;;;;;;;;;;797:183::o;806:94:21:-;849:4;888;;873:11;:9;:11::i;:::-;:19;;866:26;;806:94;:::o;3225:79:13:-;3264:7;3290;;;;;;;;;;;3283:14;;3225:79;:::o;1930:96:16:-;1974:4;2013:5;;1998:11;:9;:11::i;:::-;:20;;1991:27;;1930:96;:::o;557:82:14:-;599:4;622:10;;;;;;;;;;;615:17;;557:82;:::o;1020:89:24:-;1064:7;1090:12;;1083:19;;1020:89;:::o;1643:158:16:-;1708:11;:9;:11::i;:::-;1700:20;;;;;;;;1740:13;:11;:13::i;:::-;1739:14;1731:23;;;;;;;;1767:7;;;;;;;;;;;:16;;;1784:8;1767:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1767:26:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1767:26:16;;;;1643:158;:::o;2153:147::-;2223:13;:11;:13::i;:::-;2215:22;;;;;;;;2250:7;;;;;;;;;;;:40;;;:42;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2250:42:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2250:42:16;;;;2153:147::o;3073:76:13:-;3111:6;3136;;;;;;;;;;;3129:13;;3073:76;:::o;2065:165:24:-;443:8;:6;:8::i;:::-;435:17;;;;;;;;2173:50;2200:11;2213:9;2173:26;:50::i;:::-;2065:165;;:::o;7154:120:13:-;7221:7;7247:20;7261:5;;7247:9;:13;;:20;;;;:::i;:::-;7240:27;;7154:120;;;:::o;2854:150:40:-;2912:7;2932:9;2948:1;2944;:5;2932:17;;2973:1;2968;:6;;2960:15;;;;;;;;2995:1;2988:8;;2854:150;;;;;:::o;6391:134:13:-;6478:40;6493:11;6506;6478:14;:40::i;:::-;6391:134;;:::o;6788:117::-;;;:::o;2746:97:16:-;2791:7;;;;;;;;;;;:15;;;2813:9;2824:10;2791:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2791:44:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2791:44:16;;;;;2746:97::o;5601:121:13:-;;;:::o;2398:247:16:-;2447:13;:11;:13::i;:::-;2443:161;;;2477:7;;;;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2477:15:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2477:15:16;;;;2507:7;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2507:29:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2507:29:16;;;;2443:161;;;2569:7;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2569:23:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2569:23:16;;;;2443:161;2616:21;:19;:21::i;:::-;2398:247::o;1103:207:21:-;1198:50;1225:11;1238:9;1198:26;:50::i;:::-;1297:4;;1267:26;1283:9;1267:11;:9;:11::i;:::-;:15;;:26;;;;:::i;:::-;:34;;1259:43;;;;;;;;1103:207;;:::o;284:433:40:-;342:7;641:9;591:1;586;:6;582:47;;;616:1;609:8;;;;582:47;657:1;653;:5;641:17;;686:1;681;677;:5;;;;;;;;:10;669:19;;;;;;;;708:1;701:8;;284:433;;;;;;:::o;527:239:19:-;717:7;:5;:7::i;:::-;695:36;;;732:11;745;695:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;695:62:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;695:62:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;695:62:19;;;;;;;;;;;;;;;;687:71;;;;;;;;527:239;;:::o;1189:36:14:-;:::o;5145:168:13:-;5270:1;5247:25;;:11;:25;;;;5239:34;;;;;;;;5304:1;5291:9;:14;;5283:23;;;;;;;;5145:168;;:::o",
  "source": "pragma solidity ^0.4.24;\r\n\r\nimport \"../crowdsale/validation/CappedCrowdsale.sol\";\r\nimport \"../crowdsale/distribution/RefundableCrowdsale.sol\";\r\nimport \"../crowdsale/emission/MintedCrowdsale.sol\";\r\nimport \"../token/ERC20/ERC20Mintable.sol\";\r\nimport \"../token/ERC20/ERC20Detailed.sol\";\r\n\r\n/**\r\n * @title SampleCrowdsaleToken\r\n * @dev Very simple ERC20 Token that can be minted.\r\n * It is meant to be used in a crowdsale contract.\r\n */\r\ncontract SampleCrowdsaleToken is ERC20Mintable, ERC20Detailed {\r\n    constructor () public ERC20Detailed(\"Sample Crowdsale Token\", \"SCT\", 18) {}\r\n}\r\n\r\n/**\r\n * @title SampleCrowdsale\r\n * @dev This is an example of a fully fledged crowdsale.\r\n * The way to add new features to a base crowdsale is by multiple inheritance.\r\n * In this example we are providing following extensions:\r\n * CappedCrowdsale - sets a max boundary for raised funds\r\n * RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\r\n * MintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\r\n * when receiving purchases.\r\n *\r\n * After adding multiple features it's good practice to run integration tests\r\n * to ensure that subcontracts works together as intended.\r\n */\r\n// XXX There doesn't seem to be a way to split this line that keeps solium\r\n// happy. See:\r\n// https://github.com/duaraghav8/Solium/issues/205\r\n// --elopio - 2018-05-10\r\n// solium-disable-next-line max-len\r\ncontract SampleCrowdsale is CappedCrowdsale, RefundableCrowdsale, MintedCrowdsale {\r\n    constructor (\r\n        uint256 openingTime,\r\n        uint256 closingTime,\r\n        uint256 rate,\r\n        address wallet,\r\n        uint256 cap,\r\n        ERC20Mintable token,\r\n        uint256 goal\r\n    )\r\n        public\r\n        Crowdsale(rate, wallet, token)\r\n        CappedCrowdsale(cap)\r\n        TimedCrowdsale(openingTime, closingTime)\r\n        RefundableCrowdsale(goal)\r\n    {\r\n        //As goal needs to be met for a successful crowdsale\r\n        //the value needs to less or equal than a cap which is limit for accepted funds\r\n        require(goal <= cap);\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\dev\\uae\\contracts\\open-zeppelin-contracts\\examples\\SampleCrowdsale.sol",
  "ast": {
    "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        3344
      ],
      "SampleCrowdsaleToken": [
        3298
      ]
    },
    "id": 3345,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3279,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:33"
      },
      {
        "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../crowdsale/validation/CappedCrowdsale.sol",
        "id": 3280,
        "nodeType": "ImportDirective",
        "scope": 3345,
        "sourceUnit": 2067,
        "src": "28:53:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 3281,
        "nodeType": "ImportDirective",
        "scope": 3345,
        "sourceUnit": 1721,
        "src": "83:59:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../crowdsale/emission/MintedCrowdsale.sol",
        "id": 3282,
        "nodeType": "ImportDirective",
        "scope": 3345,
        "sourceUnit": 1861,
        "src": "144:51:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../token/ERC20/ERC20Mintable.sol",
        "id": 3283,
        "nodeType": "ImportDirective",
        "scope": 3345,
        "sourceUnit": 7933,
        "src": "197:42:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/token/ERC20/ERC20Detailed.sol",
        "file": "../token/ERC20/ERC20Detailed.sol",
        "id": 3284,
        "nodeType": "ImportDirective",
        "scope": 3345,
        "sourceUnit": 7905,
        "src": "241:42:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3285,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7932,
              "src": "467:13:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 3286,
            "nodeType": "InheritanceSpecifier",
            "src": "467:13:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3287,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7904,
              "src": "482:13:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$7904",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 3288,
            "nodeType": "InheritanceSpecifier",
            "src": "482:13:33"
          }
        ],
        "contractDependencies": [
          760,
          7758,
          7904,
          7932,
          8103
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\r\n@dev Very simple ERC20 Token that can be minted.\r\nIt is meant to be used in a crowdsale contract.\r",
        "fullyImplemented": true,
        "id": 3298,
        "linearizedBaseContracts": [
          3298,
          7904,
          7932,
          760,
          7758,
          8103
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3296,
              "nodeType": "Block",
              "src": "576:2:33",
              "statements": []
            },
            "documentation": null,
            "id": 3297,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
                    "id": 3291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "539:24:33",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                      "typeString": "literal_string \"Sample Crowdsale Token\""
                    },
                    "value": "Sample Crowdsale Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "534354",
                    "id": 3292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "565:5:33",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                      "typeString": "literal_string \"SCT\""
                    },
                    "value": "SCT"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 3293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "572:2:33",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 3294,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3290,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7904,
                  "src": "525:13:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$7904_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "525:50:33"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "515:2:33"
            },
            "payable": false,
            "returnParameters": {
              "id": 3295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:0:33"
            },
            "scope": 3298,
            "src": "503:75:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3345,
        "src": "434:147:33"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3299,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2066,
              "src": "1461:15:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$2066",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 3300,
            "nodeType": "InheritanceSpecifier",
            "src": "1461:15:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3301,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1720,
              "src": "1478:19:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$1720",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 3302,
            "nodeType": "InheritanceSpecifier",
            "src": "1478:19:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3303,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1860,
              "src": "1499:15:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$1860",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 3304,
            "nodeType": "InheritanceSpecifier",
            "src": "1499:15:33"
          }
        ],
        "contractDependencies": [
          1443,
          1501,
          1720,
          1860,
          2066,
          2318,
          9881
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\r\n@dev This is an example of a fully fledged crowdsale.\r\nThe way to add new features to a base crowdsale is by multiple inheritance.\r\nIn this example we are providing following extensions:\r\nCappedCrowdsale - sets a max boundary for raised funds\r\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\r\nMintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\r\nwhen receiving purchases.\r\n\n * After adding multiple features it's good practice to run integration tests\r\nto ensure that subcontracts works together as intended.\r",
        "fullyImplemented": true,
        "id": 3344,
        "linearizedBaseContracts": [
          3344,
          1860,
          1720,
          1501,
          2318,
          2066,
          1443,
          9881
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3342,
              "nodeType": "Block",
              "src": "1901:190:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3337,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3318,
                          "src": "2071:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3338,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3314,
                          "src": "2079:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2071:11:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3336,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11111,
                        11112
                      ],
                      "referencedDeclaration": 11111,
                      "src": "2063:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2063:20:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3341,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:20:33"
                }
              ]
            },
            "documentation": null,
            "id": 3343,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3321,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3310,
                    "src": "1760:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3322,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3312,
                    "src": "1766:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3323,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3316,
                    "src": "1774:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                      "typeString": "contract ERC20Mintable"
                    }
                  }
                ],
                "id": 3324,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3320,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1443,
                  "src": "1750:9:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1443_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1750:30:33"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3326,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3314,
                    "src": "1806:3:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3327,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3325,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2066,
                  "src": "1790:15:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$2066_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1790:20:33"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3329,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3306,
                    "src": "1835:11:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3330,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3308,
                    "src": "1848:11:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3331,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3328,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2318,
                  "src": "1820:14:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$2318_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1820:40:33"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3333,
                    "name": "goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3318,
                    "src": "1890:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3334,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3332,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1720,
                  "src": "1870:19:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$1720_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1870:25:33"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3306,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3343,
                  "src": "1545:19:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1545:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3308,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3343,
                  "src": "1575:19:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1575:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3310,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 3343,
                  "src": "1605:12:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1605:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3312,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 3343,
                  "src": "1628:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3314,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 3343,
                  "src": "1653:11:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3316,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3343,
                  "src": "1675:19:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3315,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7932,
                    "src": "1675:13:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3318,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 3343,
                  "src": "1705:12:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1534:190:33"
            },
            "payable": false,
            "returnParameters": {
              "id": 3335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1901:0:33"
            },
            "scope": 3344,
            "src": "1522:569:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3345,
        "src": "1433:661:33"
      }
    ],
    "src": "0:2096:33"
  },
  "legacyAST": {
    "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        3344
      ],
      "SampleCrowdsaleToken": [
        3298
      ]
    },
    "id": 3345,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3279,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:33"
      },
      {
        "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../crowdsale/validation/CappedCrowdsale.sol",
        "id": 3280,
        "nodeType": "ImportDirective",
        "scope": 3345,
        "sourceUnit": 2067,
        "src": "28:53:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 3281,
        "nodeType": "ImportDirective",
        "scope": 3345,
        "sourceUnit": 1721,
        "src": "83:59:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../crowdsale/emission/MintedCrowdsale.sol",
        "id": 3282,
        "nodeType": "ImportDirective",
        "scope": 3345,
        "sourceUnit": 1861,
        "src": "144:51:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../token/ERC20/ERC20Mintable.sol",
        "id": 3283,
        "nodeType": "ImportDirective",
        "scope": 3345,
        "sourceUnit": 7933,
        "src": "197:42:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/token/ERC20/ERC20Detailed.sol",
        "file": "../token/ERC20/ERC20Detailed.sol",
        "id": 3284,
        "nodeType": "ImportDirective",
        "scope": 3345,
        "sourceUnit": 7905,
        "src": "241:42:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3285,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7932,
              "src": "467:13:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 3286,
            "nodeType": "InheritanceSpecifier",
            "src": "467:13:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3287,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7904,
              "src": "482:13:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$7904",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 3288,
            "nodeType": "InheritanceSpecifier",
            "src": "482:13:33"
          }
        ],
        "contractDependencies": [
          760,
          7758,
          7904,
          7932,
          8103
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\r\n@dev Very simple ERC20 Token that can be minted.\r\nIt is meant to be used in a crowdsale contract.\r",
        "fullyImplemented": true,
        "id": 3298,
        "linearizedBaseContracts": [
          3298,
          7904,
          7932,
          760,
          7758,
          8103
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3296,
              "nodeType": "Block",
              "src": "576:2:33",
              "statements": []
            },
            "documentation": null,
            "id": 3297,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
                    "id": 3291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "539:24:33",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                      "typeString": "literal_string \"Sample Crowdsale Token\""
                    },
                    "value": "Sample Crowdsale Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "534354",
                    "id": 3292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "565:5:33",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                      "typeString": "literal_string \"SCT\""
                    },
                    "value": "SCT"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 3293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "572:2:33",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 3294,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3290,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7904,
                  "src": "525:13:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$7904_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "525:50:33"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "515:2:33"
            },
            "payable": false,
            "returnParameters": {
              "id": 3295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:0:33"
            },
            "scope": 3298,
            "src": "503:75:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3345,
        "src": "434:147:33"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3299,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2066,
              "src": "1461:15:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$2066",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 3300,
            "nodeType": "InheritanceSpecifier",
            "src": "1461:15:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3301,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1720,
              "src": "1478:19:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$1720",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 3302,
            "nodeType": "InheritanceSpecifier",
            "src": "1478:19:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3303,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1860,
              "src": "1499:15:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$1860",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 3304,
            "nodeType": "InheritanceSpecifier",
            "src": "1499:15:33"
          }
        ],
        "contractDependencies": [
          1443,
          1501,
          1720,
          1860,
          2066,
          2318,
          9881
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\r\n@dev This is an example of a fully fledged crowdsale.\r\nThe way to add new features to a base crowdsale is by multiple inheritance.\r\nIn this example we are providing following extensions:\r\nCappedCrowdsale - sets a max boundary for raised funds\r\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\r\nMintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\r\nwhen receiving purchases.\r\n\n * After adding multiple features it's good practice to run integration tests\r\nto ensure that subcontracts works together as intended.\r",
        "fullyImplemented": true,
        "id": 3344,
        "linearizedBaseContracts": [
          3344,
          1860,
          1720,
          1501,
          2318,
          2066,
          1443,
          9881
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3342,
              "nodeType": "Block",
              "src": "1901:190:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3337,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3318,
                          "src": "2071:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3338,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3314,
                          "src": "2079:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2071:11:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3336,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11111,
                        11112
                      ],
                      "referencedDeclaration": 11111,
                      "src": "2063:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2063:20:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3341,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:20:33"
                }
              ]
            },
            "documentation": null,
            "id": 3343,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3321,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3310,
                    "src": "1760:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3322,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3312,
                    "src": "1766:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3323,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3316,
                    "src": "1774:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                      "typeString": "contract ERC20Mintable"
                    }
                  }
                ],
                "id": 3324,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3320,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1443,
                  "src": "1750:9:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1443_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1750:30:33"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3326,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3314,
                    "src": "1806:3:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3327,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3325,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2066,
                  "src": "1790:15:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$2066_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1790:20:33"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3329,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3306,
                    "src": "1835:11:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3330,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3308,
                    "src": "1848:11:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3331,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3328,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2318,
                  "src": "1820:14:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$2318_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1820:40:33"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3333,
                    "name": "goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3318,
                    "src": "1890:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3334,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3332,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1720,
                  "src": "1870:19:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$1720_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1870:25:33"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3306,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3343,
                  "src": "1545:19:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1545:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3308,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3343,
                  "src": "1575:19:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1575:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3310,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 3343,
                  "src": "1605:12:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1605:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3312,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 3343,
                  "src": "1628:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3314,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 3343,
                  "src": "1653:11:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3316,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3343,
                  "src": "1675:19:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3315,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7932,
                    "src": "1675:13:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3318,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 3343,
                  "src": "1705:12:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1534:190:33"
            },
            "payable": false,
            "returnParameters": {
              "id": 3335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1901:0:33"
            },
            "scope": 3344,
            "src": "1522:569:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3345,
        "src": "1433:661:33"
      }
    ],
    "src": "0:2096:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.2",
  "updatedAt": "2019-01-28T14:35:46.052Z"
}