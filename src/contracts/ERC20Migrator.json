{
  "contractName": "ERC20Migrator",
  "abi": [
    {
      "inputs": [
        {
          "name": "legacyToken",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "legacyToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newToken",
          "type": "address"
        }
      ],
      "name": "beginMigration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "migrateAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806109c583398101806040528101908080519060200190929190505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561006f57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610906806100bf6000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063104d26141461007257806313155455146100b55780635a8cadb11461010c578063ad68ebf71461014f578063c42bd05a1461019c575b600080fd5b34801561007e57600080fd5b506100b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101f3565b005b3480156100c157600080fd5b506100ca6103b1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011857600080fd5b5061014d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103da565b005b34801561015b57600080fd5b5061019a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610621565b005b3480156101a857600080fd5b506101b1610774565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561025057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561028c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663aa271e1a306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561032757600080fd5b505af115801561033b573d6000803e3d6000fd5b505050506040513d602081101561035157600080fd5b8101908080519060200190929190505050151561036d57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561049b57600080fd5b505af11580156104af573d6000803e3d6000fd5b505050506040513d60208110156104c557600080fd5b810190808051906020019092919050505092506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e85306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1580156105c857600080fd5b505af11580156105dc573d6000803e3d6000fd5b505050506040513d60208110156105f257600080fd5b8101908080519060200190929190505050915061060f838361079e565b905061061b8482610621565b50505050565b61066f8230836000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166107b7909392919063ffffffff16565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561073457600080fd5b505af1158015610748573d6000803e3d6000fd5b505050506040513d602081101561075e57600080fd5b8101908080519060200190929190505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008183106107ad57816107af565b825b905092915050565b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd8484846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561088e57600080fd5b505af11580156108a2573d6000803e3d6000fd5b505050506040513d60208110156108b857600080fd5b810190808051906020019092919050505015156108d457600080fd5b505050505600a165627a7a72305820130519b085dbdf1bd6c67db85e4f136c8e4ec5890af25828db0f3c89442e3eea0029",
  "deployedBytecode": "0x60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063104d26141461007257806313155455146100b55780635a8cadb11461010c578063ad68ebf71461014f578063c42bd05a1461019c575b600080fd5b34801561007e57600080fd5b506100b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101f3565b005b3480156100c157600080fd5b506100ca6103b1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011857600080fd5b5061014d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103da565b005b34801561015b57600080fd5b5061019a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610621565b005b3480156101a857600080fd5b506101b1610774565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561025057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561028c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663aa271e1a306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561032757600080fd5b505af115801561033b573d6000803e3d6000fd5b505050506040513d602081101561035157600080fd5b8101908080519060200190929190505050151561036d57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561049b57600080fd5b505af11580156104af573d6000803e3d6000fd5b505050506040513d60208110156104c557600080fd5b810190808051906020019092919050505092506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e85306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1580156105c857600080fd5b505af11580156105dc573d6000803e3d6000fd5b505050506040513d60208110156105f257600080fd5b8101908080519060200190929190505050915061060f838361079e565b905061061b8482610621565b50505050565b61066f8230836000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166107b7909392919063ffffffff16565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561073457600080fd5b505af1158015610748573d6000803e3d6000fd5b505050506040513d602081101561075e57600080fd5b8101908080519060200190929190505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008183106107ad57816107af565b825b905092915050565b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd8484846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561088e57600080fd5b505af11580156108a2573d6000803e3d6000fd5b505050506040513d60208110156108b857600080fd5b810190808051906020019092919050505015156108d457600080fd5b505050505600a165627a7a72305820130519b085dbdf1bd6c67db85e4f136c8e4ec5890af25828db0f3c89442e3eea0029",
  "sourceMap": "1656:2206:30:-;;;1962:130;8:9:-1;5:2;;;30:1;27;20:12;5:2;1962:130:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2044:1;2021:25;;:11;:25;;;;2013:34;;;;;;;;2073:11;2058:12;;:26;;;;;;;;;;;;;;;;;;1962:130;1656:2206;;;;;;",
  "deployedSourceMap": "1656:2206:30:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2669:224;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2669:224:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2180:90:30;;;;;;;;;;;;;;;;;;;;;;;;;;;3588:271;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3588:271:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;3179:170;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3179:170:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2358:84;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2358:84:30;;;;;;;;;;;;;;;;;;;;;;;;;;;2669:224;2764:1;2743:23;;:9;;;;;;;;;;;:23;;;2735:32;;;;;;;;2806:1;2786:22;;:8;:22;;;;2778:31;;;;;;;;2828:8;:17;;;2846:4;2828:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2828:23:30;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2828:23:30;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2828:23:30;;;;;;;;;;;;;;;;2820:32;;;;;;;;2877:8;2865:9;;:20;;;;;;;;;;;;;;;;;;2669:224;:::o;2180:90::-;2224:6;2250:12;;;;;;;;;;;2243:19;;2180:90;:::o;3588:271::-;3643:15;3703:17;3771:14;3661:12;;;;;;;;;;;:22;;;3684:7;3661:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3661:31:30;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3661:31:30;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3661:31:30;;;;;;;;;;;;;;;;3643:49;;3723:12;;;;;;;;;;;:22;;;3746:7;3755:4;3723:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3723:37:30;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3723:37:30;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3723:37:30;;;;;;;;;;;;;;;;3703:57;;3788:28;3797:7;3806:9;3788:8;:28::i;:::-;3771:45;;3827:24;3835:7;3844:6;3827:7;:24::i;:::-;3588:271;;;;:::o;3179:170::-;3247:52;3277:7;3286:4;3292:6;3247:12;;;;;;;;;;;:29;;;;:52;;;;;;:::i;:::-;3310:9;;;;;;;;;;;:14;;;3325:7;3334:6;3310:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3310:31:30;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3310:31:30;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3310:31:30;;;;;;;;;;;;;;;;;3179:170;;:::o;2358:84::-;2399:6;2425:9;;;;;;;;;;;2418:16;;2358:84;:::o;354:106:39:-;412:7;443:1;439;:5;:13;;451:1;439:13;;;447:1;439:13;432:20;;354:106;;;;:::o;557:153:110:-;666:5;:18;;;685:4;691:2;695:5;666:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;666:35:110;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;666:35:110;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;666:35:110;;;;;;;;;;;;;;;;658:44;;;;;;;;557:153;;;;:::o",
  "source": "pragma solidity ^0.4.24;\r\n\r\nimport \"../token/ERC20/IERC20.sol\";\r\nimport \"../token/ERC20/ERC20Mintable.sol\";\r\nimport \"../token/ERC20/SafeERC20.sol\";\r\nimport \"../math/Math.sol\";\r\n\r\n/**\r\n * @title ERC20Migrator\r\n * @dev This contract can be used to migrate an ERC20 token from one\r\n * contract to another, where each token holder has to opt-in to the migration.\r\n * To opt-in, users must approve for this contract the number of tokens they\r\n * want to migrate. Once the allowance is set up, anyone can trigger the\r\n * migration to the new token contract. In this way, token holders \"turn in\"\r\n * their old balance and will be minted an equal amount in the new token.\r\n * The new token contract must be mintable. For the precise interface refer to\r\n * OpenZeppelin's ERC20Mintable, but the only functions that are needed are\r\n * `isMinter(address)` and `mint(address, amount)`. The migrator will check\r\n * that it is a minter for the token.\r\n * The balance from the legacy token will be transfered to the migrator, as it\r\n * is migrated, and remain there forever.\r\n * Although this contract can be used in many different scenarios, the main\r\n * motivation was to provide a way to migrate ERC20 tokens into an upgradeable\r\n * version of it using ZeppelinOS. To read more about how this can be done\r\n * using this implementation, please follow the official documentation site of\r\n * ZeppelinOS: https://docs.zeppelinos.org/docs/erc20_onboarding.html\r\n * Example of usage:\r\n * ```\r\n * const migrator = await ERC20Migrator.new(legacyToken.address);\r\n * await newToken.addMinter(migrator.address);\r\n * await migrator.beginMigration(newToken.address);\r\n * ```\r\n */\r\ncontract ERC20Migrator {\r\n    using SafeERC20 for IERC20;\r\n\r\n    /// Address of the old token contract\r\n    IERC20 private _legacyToken;\r\n\r\n    /// Address of the new token contract\r\n    ERC20Mintable private _newToken;\r\n\r\n    /**\r\n     * @param legacyToken address of the old token contract\r\n     */\r\n    constructor (IERC20 legacyToken) public {\r\n        require(legacyToken != address(0));\r\n        _legacyToken = legacyToken;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the legacy token that is being migrated.\r\n     */\r\n    function legacyToken() public view returns (IERC20) {\r\n        return _legacyToken;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the new token to which we are migrating.\r\n     */\r\n    function newToken() public view returns (IERC20) {\r\n        return _newToken;\r\n    }\r\n\r\n    /**\r\n     * @dev Begins the migration by setting which is the new token that will be\r\n     * minted. This contract must be a minter for the new token.\r\n     * @param newToken the token that will be minted\r\n     */\r\n    function beginMigration(ERC20Mintable newToken) public {\r\n        require(_newToken == address(0));\r\n        require(newToken != address(0));\r\n        require(newToken.isMinter(this));\r\n\r\n        _newToken = newToken;\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers part of an account's balance in the old token to this\r\n     * contract, and mints the same amount of new tokens for that account.\r\n     * @param account whose tokens will be migrated\r\n     * @param amount amount of tokens to be migrated\r\n     */\r\n    function migrate(address account, uint256 amount) public {\r\n        _legacyToken.safeTransferFrom(account, this, amount);\r\n        _newToken.mint(account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers all of an account's allowed balance in the old token to\r\n     * this contract, and mints the same amount of new tokens for that account.\r\n     * @param account whose tokens will be migrated\r\n     */\r\n    function migrateAll(address account) public {\r\n        uint256 balance = _legacyToken.balanceOf(account);\r\n        uint256 allowance = _legacyToken.allowance(account, this);\r\n        uint256 amount = Math.min(balance, allowance);\r\n        migrate(account, amount);\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\dev\\uae\\contracts\\open-zeppelin-contracts\\drafts\\ERC20Migrator.sol",
  "ast": {
    "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/drafts/ERC20Migrator.sol",
    "exportedSymbols": {
      "ERC20Migrator": [
        2693
      ]
    },
    "id": 2694,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2557,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:30"
      },
      {
        "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/token/ERC20/IERC20.sol",
        "file": "../token/ERC20/IERC20.sol",
        "id": 2558,
        "nodeType": "ImportDirective",
        "scope": 2694,
        "sourceUnit": 8104,
        "src": "28:35:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../token/ERC20/ERC20Mintable.sol",
        "id": 2559,
        "nodeType": "ImportDirective",
        "scope": 2694,
        "sourceUnit": 7933,
        "src": "65:42:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/token/ERC20/SafeERC20.sol",
        "file": "../token/ERC20/SafeERC20.sol",
        "id": 2560,
        "nodeType": "ImportDirective",
        "scope": 2694,
        "sourceUnit": 8248,
        "src": "109:38:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/math/Math.sol",
        "file": "../math/Math.sol",
        "id": 2561,
        "nodeType": "ImportDirective",
        "scope": 2694,
        "sourceUnit": 3730,
        "src": "149:26:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title ERC20Migrator\r\n@dev This contract can be used to migrate an ERC20 token from one\r\ncontract to another, where each token holder has to opt-in to the migration.\r\nTo opt-in, users must approve for this contract the number of tokens they\r\nwant to migrate. Once the allowance is set up, anyone can trigger the\r\nmigration to the new token contract. In this way, token holders \"turn in\"\r\ntheir old balance and will be minted an equal amount in the new token.\r\nThe new token contract must be mintable. For the precise interface refer to\r\nOpenZeppelin's ERC20Mintable, but the only functions that are needed are\r\n`isMinter(address)` and `mint(address, amount)`. The migrator will check\r\nthat it is a minter for the token.\r\nThe balance from the legacy token will be transfered to the migrator, as it\r\nis migrated, and remain there forever.\r\nAlthough this contract can be used in many different scenarios, the main\r\nmotivation was to provide a way to migrate ERC20 tokens into an upgradeable\r\nversion of it using ZeppelinOS. To read more about how this can be done\r\nusing this implementation, please follow the official documentation site of\r\nZeppelinOS: https://docs.zeppelinos.org/docs/erc20_onboarding.html\r\nExample of usage:\r\n```\r\nconst migrator = await ERC20Migrator.new(legacyToken.address);\r\nawait newToken.addMinter(migrator.address);\r\nawait migrator.beginMigration(newToken.address);\r\n```\r",
        "fullyImplemented": true,
        "id": 2693,
        "linearizedBaseContracts": [
          2693
        ],
        "name": "ERC20Migrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2564,
            "libraryName": {
              "contractScope": null,
              "id": 2562,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8247,
              "src": "1692:9:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$8247",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1686:27:30",
            "typeName": {
              "contractScope": null,
              "id": 2563,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8103,
              "src": "1706:6:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$8103",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 2566,
            "name": "_legacyToken",
            "nodeType": "VariableDeclaration",
            "scope": 2693,
            "src": "1764:27:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$8103",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 2565,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8103,
              "src": "1764:6:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$8103",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2568,
            "name": "_newToken",
            "nodeType": "VariableDeclaration",
            "scope": 2693,
            "src": "1843:31:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
              "typeString": "contract ERC20Mintable"
            },
            "typeName": {
              "contractScope": null,
              "id": 2567,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7932,
              "src": "1843:13:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                "typeString": "contract ERC20Mintable"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2585,
              "nodeType": "Block",
              "src": "2002:90:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2574,
                          "name": "legacyToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2570,
                          "src": "2021:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8103",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2044:1:30",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2036:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2036:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2021:25:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2573,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11111,
                        11112
                      ],
                      "referencedDeclaration": 11111,
                      "src": "2013:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:34:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2580,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:34:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2581,
                      "name": "_legacyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2566,
                      "src": "2058:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8103",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2582,
                      "name": "legacyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2570,
                      "src": "2073:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8103",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2058:26:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8103",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2584,
                  "nodeType": "ExpressionStatement",
                  "src": "2058:26:30"
                }
              ]
            },
            "documentation": "@param legacyToken address of the old token contract\r",
            "id": 2586,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2570,
                  "name": "legacyToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 2586,
                  "src": "1975:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8103",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2569,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8103,
                    "src": "1975:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8103",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1974:20:30"
            },
            "payable": false,
            "returnParameters": {
              "id": 2572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2002:0:30"
            },
            "scope": 2693,
            "src": "1962:130:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2593,
              "nodeType": "Block",
              "src": "2232:38:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2591,
                    "name": "_legacyToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2566,
                    "src": "2250:12:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8103",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 2590,
                  "id": 2592,
                  "nodeType": "Return",
                  "src": "2243:19:30"
                }
              ]
            },
            "documentation": "@dev Returns the legacy token that is being migrated.\r",
            "id": 2594,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "legacyToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2200:2:30"
            },
            "payable": false,
            "returnParameters": {
              "id": 2590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2589,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2594,
                  "src": "2224:6:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8103",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2588,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8103,
                    "src": "2224:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8103",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2223:8:30"
            },
            "scope": 2693,
            "src": "2180:90:30",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2601,
              "nodeType": "Block",
              "src": "2407:35:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2599,
                    "name": "_newToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2568,
                    "src": "2425:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "functionReturnParameters": 2598,
                  "id": 2600,
                  "nodeType": "Return",
                  "src": "2418:16:30"
                }
              ]
            },
            "documentation": "@dev Returns the new token to which we are migrating.\r",
            "id": 2602,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "newToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2375:2:30"
            },
            "payable": false,
            "returnParameters": {
              "id": 2598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2597,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2602,
                  "src": "2399:6:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8103",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2596,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8103,
                    "src": "2399:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8103",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2398:8:30"
            },
            "scope": 2693,
            "src": "2358:84:30",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2634,
              "nodeType": "Block",
              "src": "2724:169:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2608,
                          "name": "_newToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2568,
                          "src": "2743:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                            "typeString": "contract ERC20Mintable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2764:1:30",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2756:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2756:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2743:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2607,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11111,
                        11112
                      ],
                      "referencedDeclaration": 11111,
                      "src": "2735:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2735:32:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2614,
                  "nodeType": "ExpressionStatement",
                  "src": "2735:32:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2616,
                          "name": "newToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2604,
                          "src": "2786:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                            "typeString": "contract ERC20Mintable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2806:1:30",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2798:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2798:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2786:22:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2615,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11111,
                        11112
                      ],
                      "referencedDeclaration": 11111,
                      "src": "2778:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2778:31:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2622,
                  "nodeType": "ExpressionStatement",
                  "src": "2778:31:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2626,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11227,
                            "src": "2846:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Migrator_$2693",
                              "typeString": "contract ERC20Migrator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Migrator_$2693",
                              "typeString": "contract ERC20Migrator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2624,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2604,
                            "src": "2828:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                              "typeString": "contract ERC20Mintable"
                            }
                          },
                          "id": 2625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isMinter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 706,
                          "src": "2828:17:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 2627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2828:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2623,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11111,
                        11112
                      ],
                      "referencedDeclaration": 11111,
                      "src": "2820:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2820:32:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2629,
                  "nodeType": "ExpressionStatement",
                  "src": "2820:32:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2630,
                      "name": "_newToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2568,
                      "src": "2865:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2631,
                      "name": "newToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2604,
                      "src": "2877:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "src": "2865:20:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "id": 2633,
                  "nodeType": "ExpressionStatement",
                  "src": "2865:20:30"
                }
              ]
            },
            "documentation": "@dev Begins the migration by setting which is the new token that will be\r\nminted. This contract must be a minter for the new token.\r\n@param newToken the token that will be minted\r",
            "id": 2635,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "beginMigration",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2604,
                  "name": "newToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 2635,
                  "src": "2693:22:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2603,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7932,
                    "src": "2693:13:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2692:24:30"
            },
            "payable": false,
            "returnParameters": {
              "id": 2606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2724:0:30"
            },
            "scope": 2693,
            "src": "2669:224:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2657,
              "nodeType": "Block",
              "src": "3236:113:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2645,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2637,
                        "src": "3277:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2646,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11227,
                        "src": "3286:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Migrator_$2693",
                          "typeString": "contract ERC20Migrator"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2647,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2639,
                        "src": "3292:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Migrator_$2693",
                          "typeString": "contract ERC20Migrator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2642,
                        "name": "_legacyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2566,
                        "src": "3247:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8103",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8149,
                      "src": "3247:29:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$8103_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$8103_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 2648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3247:52:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2649,
                  "nodeType": "ExpressionStatement",
                  "src": "3247:52:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2653,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2637,
                        "src": "3325:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2654,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2639,
                        "src": "3334:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2650,
                        "name": "_newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2568,
                        "src": "3310:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 2652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7931,
                      "src": "3310:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3310:31:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2656,
                  "nodeType": "ExpressionStatement",
                  "src": "3310:31:30"
                }
              ]
            },
            "documentation": "@dev Transfers part of an account's balance in the old token to this\r\ncontract, and mints the same amount of new tokens for that account.\r\n@param account whose tokens will be migrated\r\n@param amount amount of tokens to be migrated\r",
            "id": 2658,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "migrate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2637,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2658,
                  "src": "3196:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2636,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3196:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2639,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2658,
                  "src": "3213:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2638,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3213:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3195:33:30"
            },
            "payable": false,
            "returnParameters": {
              "id": 2641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3236:0:30"
            },
            "scope": 2693,
            "src": "3179:170:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2691,
              "nodeType": "Block",
              "src": "3632:227:30",
              "statements": [
                {
                  "assignments": [
                    2664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2664,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2692,
                      "src": "3643:15:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2663,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3643:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2669,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2667,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2660,
                        "src": "3684:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2665,
                        "name": "_legacyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2566,
                        "src": "3661:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8103",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8048,
                      "src": "3661:22:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3661:31:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3643:49:30"
                },
                {
                  "assignments": [
                    2671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2671,
                      "name": "allowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2692,
                      "src": "3703:17:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2670,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3703:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2677,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2674,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2660,
                        "src": "3746:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2675,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11227,
                        "src": "3755:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Migrator_$2693",
                          "typeString": "contract ERC20Migrator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Migrator_$2693",
                          "typeString": "contract ERC20Migrator"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2672,
                        "name": "_legacyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2566,
                        "src": "3723:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8103",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8057,
                      "src": "3723:22:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 2676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3723:37:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3703:57:30"
                },
                {
                  "assignments": [
                    2679
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2679,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 2692,
                      "src": "3771:14:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2678,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3771:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2685,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2682,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2664,
                        "src": "3797:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2683,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2671,
                        "src": "3806:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2680,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3729,
                        "src": "3788:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$3729_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 2681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3696,
                      "src": "3788:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3788:28:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3771:45:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2687,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2660,
                        "src": "3835:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2688,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2679,
                        "src": "3844:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2686,
                      "name": "migrate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2658,
                      "src": "3827:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3827:24:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2690,
                  "nodeType": "ExpressionStatement",
                  "src": "3827:24:30"
                }
              ]
            },
            "documentation": "@dev Transfers all of an account's allowed balance in the old token to\r\nthis contract, and mints the same amount of new tokens for that account.\r\n@param account whose tokens will be migrated\r",
            "id": 2692,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "migrateAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2660,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2692,
                  "src": "3608:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3608:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3607:17:30"
            },
            "payable": false,
            "returnParameters": {
              "id": 2662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3632:0:30"
            },
            "scope": 2693,
            "src": "3588:271:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2694,
        "src": "1656:2206:30"
      }
    ],
    "src": "0:3864:30"
  },
  "legacyAST": {
    "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/drafts/ERC20Migrator.sol",
    "exportedSymbols": {
      "ERC20Migrator": [
        2693
      ]
    },
    "id": 2694,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2557,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:30"
      },
      {
        "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/token/ERC20/IERC20.sol",
        "file": "../token/ERC20/IERC20.sol",
        "id": 2558,
        "nodeType": "ImportDirective",
        "scope": 2694,
        "sourceUnit": 8104,
        "src": "28:35:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../token/ERC20/ERC20Mintable.sol",
        "id": 2559,
        "nodeType": "ImportDirective",
        "scope": 2694,
        "sourceUnit": 7933,
        "src": "65:42:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/token/ERC20/SafeERC20.sol",
        "file": "../token/ERC20/SafeERC20.sol",
        "id": 2560,
        "nodeType": "ImportDirective",
        "scope": 2694,
        "sourceUnit": 8248,
        "src": "109:38:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/uae/contracts/open-zeppelin-contracts/math/Math.sol",
        "file": "../math/Math.sol",
        "id": 2561,
        "nodeType": "ImportDirective",
        "scope": 2694,
        "sourceUnit": 3730,
        "src": "149:26:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title ERC20Migrator\r\n@dev This contract can be used to migrate an ERC20 token from one\r\ncontract to another, where each token holder has to opt-in to the migration.\r\nTo opt-in, users must approve for this contract the number of tokens they\r\nwant to migrate. Once the allowance is set up, anyone can trigger the\r\nmigration to the new token contract. In this way, token holders \"turn in\"\r\ntheir old balance and will be minted an equal amount in the new token.\r\nThe new token contract must be mintable. For the precise interface refer to\r\nOpenZeppelin's ERC20Mintable, but the only functions that are needed are\r\n`isMinter(address)` and `mint(address, amount)`. The migrator will check\r\nthat it is a minter for the token.\r\nThe balance from the legacy token will be transfered to the migrator, as it\r\nis migrated, and remain there forever.\r\nAlthough this contract can be used in many different scenarios, the main\r\nmotivation was to provide a way to migrate ERC20 tokens into an upgradeable\r\nversion of it using ZeppelinOS. To read more about how this can be done\r\nusing this implementation, please follow the official documentation site of\r\nZeppelinOS: https://docs.zeppelinos.org/docs/erc20_onboarding.html\r\nExample of usage:\r\n```\r\nconst migrator = await ERC20Migrator.new(legacyToken.address);\r\nawait newToken.addMinter(migrator.address);\r\nawait migrator.beginMigration(newToken.address);\r\n```\r",
        "fullyImplemented": true,
        "id": 2693,
        "linearizedBaseContracts": [
          2693
        ],
        "name": "ERC20Migrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2564,
            "libraryName": {
              "contractScope": null,
              "id": 2562,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8247,
              "src": "1692:9:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$8247",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1686:27:30",
            "typeName": {
              "contractScope": null,
              "id": 2563,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8103,
              "src": "1706:6:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$8103",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 2566,
            "name": "_legacyToken",
            "nodeType": "VariableDeclaration",
            "scope": 2693,
            "src": "1764:27:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$8103",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 2565,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8103,
              "src": "1764:6:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$8103",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2568,
            "name": "_newToken",
            "nodeType": "VariableDeclaration",
            "scope": 2693,
            "src": "1843:31:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
              "typeString": "contract ERC20Mintable"
            },
            "typeName": {
              "contractScope": null,
              "id": 2567,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7932,
              "src": "1843:13:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                "typeString": "contract ERC20Mintable"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2585,
              "nodeType": "Block",
              "src": "2002:90:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2574,
                          "name": "legacyToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2570,
                          "src": "2021:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8103",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2044:1:30",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2036:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2036:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2021:25:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2573,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11111,
                        11112
                      ],
                      "referencedDeclaration": 11111,
                      "src": "2013:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:34:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2580,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:34:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2581,
                      "name": "_legacyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2566,
                      "src": "2058:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8103",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2582,
                      "name": "legacyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2570,
                      "src": "2073:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8103",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2058:26:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8103",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2584,
                  "nodeType": "ExpressionStatement",
                  "src": "2058:26:30"
                }
              ]
            },
            "documentation": "@param legacyToken address of the old token contract\r",
            "id": 2586,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2570,
                  "name": "legacyToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 2586,
                  "src": "1975:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8103",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2569,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8103,
                    "src": "1975:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8103",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1974:20:30"
            },
            "payable": false,
            "returnParameters": {
              "id": 2572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2002:0:30"
            },
            "scope": 2693,
            "src": "1962:130:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2593,
              "nodeType": "Block",
              "src": "2232:38:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2591,
                    "name": "_legacyToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2566,
                    "src": "2250:12:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8103",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 2590,
                  "id": 2592,
                  "nodeType": "Return",
                  "src": "2243:19:30"
                }
              ]
            },
            "documentation": "@dev Returns the legacy token that is being migrated.\r",
            "id": 2594,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "legacyToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2200:2:30"
            },
            "payable": false,
            "returnParameters": {
              "id": 2590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2589,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2594,
                  "src": "2224:6:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8103",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2588,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8103,
                    "src": "2224:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8103",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2223:8:30"
            },
            "scope": 2693,
            "src": "2180:90:30",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2601,
              "nodeType": "Block",
              "src": "2407:35:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2599,
                    "name": "_newToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2568,
                    "src": "2425:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "functionReturnParameters": 2598,
                  "id": 2600,
                  "nodeType": "Return",
                  "src": "2418:16:30"
                }
              ]
            },
            "documentation": "@dev Returns the new token to which we are migrating.\r",
            "id": 2602,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "newToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2375:2:30"
            },
            "payable": false,
            "returnParameters": {
              "id": 2598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2597,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2602,
                  "src": "2399:6:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8103",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2596,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8103,
                    "src": "2399:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8103",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2398:8:30"
            },
            "scope": 2693,
            "src": "2358:84:30",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2634,
              "nodeType": "Block",
              "src": "2724:169:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2608,
                          "name": "_newToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2568,
                          "src": "2743:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                            "typeString": "contract ERC20Mintable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2764:1:30",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2756:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2756:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2743:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2607,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11111,
                        11112
                      ],
                      "referencedDeclaration": 11111,
                      "src": "2735:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2735:32:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2614,
                  "nodeType": "ExpressionStatement",
                  "src": "2735:32:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2616,
                          "name": "newToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2604,
                          "src": "2786:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                            "typeString": "contract ERC20Mintable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2806:1:30",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2798:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2798:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2786:22:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2615,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11111,
                        11112
                      ],
                      "referencedDeclaration": 11111,
                      "src": "2778:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2778:31:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2622,
                  "nodeType": "ExpressionStatement",
                  "src": "2778:31:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2626,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11227,
                            "src": "2846:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Migrator_$2693",
                              "typeString": "contract ERC20Migrator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Migrator_$2693",
                              "typeString": "contract ERC20Migrator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2624,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2604,
                            "src": "2828:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                              "typeString": "contract ERC20Mintable"
                            }
                          },
                          "id": 2625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isMinter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 706,
                          "src": "2828:17:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 2627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2828:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2623,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11111,
                        11112
                      ],
                      "referencedDeclaration": 11111,
                      "src": "2820:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2820:32:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2629,
                  "nodeType": "ExpressionStatement",
                  "src": "2820:32:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2630,
                      "name": "_newToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2568,
                      "src": "2865:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2631,
                      "name": "newToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2604,
                      "src": "2877:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "src": "2865:20:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "id": 2633,
                  "nodeType": "ExpressionStatement",
                  "src": "2865:20:30"
                }
              ]
            },
            "documentation": "@dev Begins the migration by setting which is the new token that will be\r\nminted. This contract must be a minter for the new token.\r\n@param newToken the token that will be minted\r",
            "id": 2635,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "beginMigration",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2604,
                  "name": "newToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 2635,
                  "src": "2693:22:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2603,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7932,
                    "src": "2693:13:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2692:24:30"
            },
            "payable": false,
            "returnParameters": {
              "id": 2606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2724:0:30"
            },
            "scope": 2693,
            "src": "2669:224:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2657,
              "nodeType": "Block",
              "src": "3236:113:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2645,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2637,
                        "src": "3277:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2646,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11227,
                        "src": "3286:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Migrator_$2693",
                          "typeString": "contract ERC20Migrator"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2647,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2639,
                        "src": "3292:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Migrator_$2693",
                          "typeString": "contract ERC20Migrator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2642,
                        "name": "_legacyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2566,
                        "src": "3247:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8103",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8149,
                      "src": "3247:29:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$8103_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$8103_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 2648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3247:52:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2649,
                  "nodeType": "ExpressionStatement",
                  "src": "3247:52:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2653,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2637,
                        "src": "3325:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2654,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2639,
                        "src": "3334:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2650,
                        "name": "_newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2568,
                        "src": "3310:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$7932",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 2652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7931,
                      "src": "3310:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3310:31:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2656,
                  "nodeType": "ExpressionStatement",
                  "src": "3310:31:30"
                }
              ]
            },
            "documentation": "@dev Transfers part of an account's balance in the old token to this\r\ncontract, and mints the same amount of new tokens for that account.\r\n@param account whose tokens will be migrated\r\n@param amount amount of tokens to be migrated\r",
            "id": 2658,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "migrate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2637,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2658,
                  "src": "3196:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2636,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3196:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2639,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2658,
                  "src": "3213:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2638,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3213:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3195:33:30"
            },
            "payable": false,
            "returnParameters": {
              "id": 2641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3236:0:30"
            },
            "scope": 2693,
            "src": "3179:170:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2691,
              "nodeType": "Block",
              "src": "3632:227:30",
              "statements": [
                {
                  "assignments": [
                    2664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2664,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2692,
                      "src": "3643:15:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2663,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3643:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2669,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2667,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2660,
                        "src": "3684:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2665,
                        "name": "_legacyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2566,
                        "src": "3661:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8103",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8048,
                      "src": "3661:22:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3661:31:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3643:49:30"
                },
                {
                  "assignments": [
                    2671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2671,
                      "name": "allowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2692,
                      "src": "3703:17:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2670,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3703:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2677,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2674,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2660,
                        "src": "3746:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2675,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11227,
                        "src": "3755:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Migrator_$2693",
                          "typeString": "contract ERC20Migrator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Migrator_$2693",
                          "typeString": "contract ERC20Migrator"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2672,
                        "name": "_legacyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2566,
                        "src": "3723:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8103",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8057,
                      "src": "3723:22:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 2676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3723:37:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3703:57:30"
                },
                {
                  "assignments": [
                    2679
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2679,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 2692,
                      "src": "3771:14:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2678,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3771:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2685,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2682,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2664,
                        "src": "3797:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2683,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2671,
                        "src": "3806:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2680,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3729,
                        "src": "3788:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$3729_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 2681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3696,
                      "src": "3788:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3788:28:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3771:45:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2687,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2660,
                        "src": "3835:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2688,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2679,
                        "src": "3844:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2686,
                      "name": "migrate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2658,
                      "src": "3827:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3827:24:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2690,
                  "nodeType": "ExpressionStatement",
                  "src": "3827:24:30"
                }
              ]
            },
            "documentation": "@dev Transfers all of an account's allowed balance in the old token to\r\nthis contract, and mints the same amount of new tokens for that account.\r\n@param account whose tokens will be migrated\r",
            "id": 2692,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "migrateAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2660,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2692,
                  "src": "3608:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3608:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3607:17:30"
            },
            "payable": false,
            "returnParameters": {
              "id": 2662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3632:0:30"
            },
            "scope": 2693,
            "src": "3588:271:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2694,
        "src": "1656:2206:30"
      }
    ],
    "src": "0:3864:30"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.2",
  "updatedAt": "2019-01-28T14:35:46.054Z"
}