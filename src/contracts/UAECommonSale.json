{
  "contractName": "UAECommonSale",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "newRefererPercent",
          "type": "uint256"
        }
      ],
      "name": "setRefererPercent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newToken",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newRefereralsMinInvestLimit",
          "type": "uint256"
        }
      ],
      "name": "setReferalsMinInvestLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newPercentRate",
          "type": "uint256"
        }
      ],
      "name": "setPercentRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokens",
          "type": "uint256"
        },
        {
          "name": "_invested",
          "type": "uint256"
        }
      ],
      "name": "getValueBonusTokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "referalsMinInvestLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "anotherToken",
          "type": "address"
        }
      ],
      "name": "retrieveTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "directMintAgent",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "refererPercent",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newDirectMintAgent",
          "type": "address"
        }
      ],
      "name": "setDirectMintAgent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "percentRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "mintTokensExternal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newMinInvestedLimit",
          "type": "uint256"
        }
      ],
      "name": "setMinInvestedLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "valueBonuses",
      "outputs": [
        {
          "name": "from",
          "type": "uint256"
        },
        {
          "name": "bonus",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hardcap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "uint256"
        },
        {
          "name": "bonus",
          "type": "uint256"
        }
      ],
      "name": "addValueBonus",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "start",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "_invested",
          "type": "uint256"
        }
      ],
      "name": "mintTokensByETHExternal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "invested",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "getValueBonus",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minInvestedLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "endSaleDate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newWallet",
          "type": "address"
        }
      ],
      "name": "setWallet",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newHardcap",
          "type": "uint256"
        }
      ],
      "name": "setHardcap",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newStart",
          "type": "uint256"
        }
      ],
      "name": "setStart",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.24;\r\n\r\nimport '../feature/ValueBonusFeature.sol';\r\nimport '../feature/RetrieveTokensFeature.sol';\r\nimport '../feature/ReferersRewardFeature.sol';\r\n\r\ncontract UAECommonSale is ValueBonusFeature, RetrieveTokensFeature, ReferersRewardFeature {\r\n}",
  "sourcePath": "D:\\dev\\uae\\contracts\\crowdsale\\UAECommonSale.sol",
  "ast": {
    "absolutePath": "/D/dev/uae/contracts/crowdsale/UAECommonSale.sol",
    "exportedSymbols": {
      "UAECommonSale": [
        1279
      ]
    },
    "id": 1280,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1269,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:6"
      },
      {
        "absolutePath": "/D/dev/uae/contracts/feature/ValueBonusFeature.sol",
        "file": "../feature/ValueBonusFeature.sol",
        "id": 1270,
        "nodeType": "ImportDirective",
        "scope": 1280,
        "sourceUnit": 1601,
        "src": "28:42:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/uae/contracts/feature/RetrieveTokensFeature.sol",
        "file": "../feature/RetrieveTokensFeature.sol",
        "id": 1271,
        "nodeType": "ImportDirective",
        "scope": 1280,
        "sourceUnit": 1488,
        "src": "72:46:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/uae/contracts/feature/ReferersRewardFeature.sol",
        "file": "../feature/ReferersRewardFeature.sol",
        "id": 1272,
        "nodeType": "ImportDirective",
        "scope": 1280,
        "sourceUnit": 1455,
        "src": "120:46:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1273,
              "name": "ValueBonusFeature",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1600,
              "src": "196:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ValueBonusFeature_$1600",
                "typeString": "contract ValueBonusFeature"
              }
            },
            "id": 1274,
            "nodeType": "InheritanceSpecifier",
            "src": "196:17:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1275,
              "name": "RetrieveTokensFeature",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1487,
              "src": "215:21:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RetrieveTokensFeature_$1487",
                "typeString": "contract RetrieveTokensFeature"
              }
            },
            "id": 1276,
            "nodeType": "InheritanceSpecifier",
            "src": "215:21:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1277,
              "name": "ReferersRewardFeature",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1454,
              "src": "238:21:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReferersRewardFeature_$1454",
                "typeString": "contract ReferersRewardFeature"
              }
            },
            "id": 1278,
            "nodeType": "InheritanceSpecifier",
            "src": "238:21:6"
          }
        ],
        "contractDependencies": [
          479,
          1355,
          1454,
          1487,
          1600,
          1754,
          1775
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1279,
        "linearizedBaseContracts": [
          1279,
          1454,
          479,
          1487,
          1600,
          1775,
          1754,
          1355
        ],
        "name": "UAECommonSale",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 1280,
        "src": "170:94:6"
      }
    ],
    "src": "0:264:6"
  },
  "legacyAST": {
    "absolutePath": "/D/dev/uae/contracts/crowdsale/UAECommonSale.sol",
    "exportedSymbols": {
      "UAECommonSale": [
        1279
      ]
    },
    "id": 1280,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1269,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:6"
      },
      {
        "absolutePath": "/D/dev/uae/contracts/feature/ValueBonusFeature.sol",
        "file": "../feature/ValueBonusFeature.sol",
        "id": 1270,
        "nodeType": "ImportDirective",
        "scope": 1280,
        "sourceUnit": 1601,
        "src": "28:42:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/uae/contracts/feature/RetrieveTokensFeature.sol",
        "file": "../feature/RetrieveTokensFeature.sol",
        "id": 1271,
        "nodeType": "ImportDirective",
        "scope": 1280,
        "sourceUnit": 1488,
        "src": "72:46:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/uae/contracts/feature/ReferersRewardFeature.sol",
        "file": "../feature/ReferersRewardFeature.sol",
        "id": 1272,
        "nodeType": "ImportDirective",
        "scope": 1280,
        "sourceUnit": 1455,
        "src": "120:46:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1273,
              "name": "ValueBonusFeature",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1600,
              "src": "196:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ValueBonusFeature_$1600",
                "typeString": "contract ValueBonusFeature"
              }
            },
            "id": 1274,
            "nodeType": "InheritanceSpecifier",
            "src": "196:17:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1275,
              "name": "RetrieveTokensFeature",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1487,
              "src": "215:21:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RetrieveTokensFeature_$1487",
                "typeString": "contract RetrieveTokensFeature"
              }
            },
            "id": 1276,
            "nodeType": "InheritanceSpecifier",
            "src": "215:21:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1277,
              "name": "ReferersRewardFeature",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1454,
              "src": "238:21:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReferersRewardFeature_$1454",
                "typeString": "contract ReferersRewardFeature"
              }
            },
            "id": 1278,
            "nodeType": "InheritanceSpecifier",
            "src": "238:21:6"
          }
        ],
        "contractDependencies": [
          479,
          1355,
          1454,
          1487,
          1600,
          1754,
          1775
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1279,
        "linearizedBaseContracts": [
          1279,
          1454,
          479,
          1487,
          1600,
          1775,
          1754,
          1355
        ],
        "name": "UAECommonSale",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 1280,
        "src": "170:94:6"
      }
    ],
    "src": "0:264:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.2",
  "updatedAt": "2019-01-26T16:32:46.457Z"
}